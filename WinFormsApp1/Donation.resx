<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>